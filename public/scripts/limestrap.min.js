function focusFirst(t){$("#limesurvey :input:visible:enabled:first").focus()}$(document).ready(function(){$(".input-error").length>0&&$("#bootstrap-alert-box-modal").on("hidden.bs.modal",function(){$firstError=$(".input-error").first(),$pixToScroll=$firstError.offset().top-100,$("html, body").animate({scrollTop:$pixToScroll+"px"},"fast")}),$(".label-clickable").each(function(){var t=$(this),e=t.attr("id");e=void 0!=e?e.replace("label-",""):"";var i=$("#"+e);t.on("click",function(){i.trigger("click")})}),$(".if-no-js").hide(),$(window).width();var t=$("#topsurveymenubar").innerHeight(),e=t;$.trim($("#topContainer .container").html())?($("#topContainer").css({top:t+"px"}),$topContainerHeight=$("#topContainer").height(),e+=$topContainerHeight):$("#topContainer").hide(),$.trim($("#surveynametitle").html())||$.trim($("#surveydescription").html())||$("#survey-header").hide(),$("#outerframeContainer").css({marginTop:e+"px"}),$(".language-changer").each(function(){$that=$(this),$.trim($that.children("div").html())||$that.hide()}),$(".group-description-container").each(function(){$that=$(this),$.trim($that.children("div").html())||$that.hide()}),$(".questionhelp").each(function(){$that=$(this),$.trim($that.html())||$that.hide()}),$("#loadallbtnlink").length>0&&$("#loadallbtnlink").on("click",function(){$("#loadallbtn").trigger("click")}),$("#saveallbtnlink").length>0&&$("#saveallbtnlink").on("click",function(){$("#saveallbtn").trigger("click")}),$("#clearallbtnlink").length>0&&$("#clearallbtnlink").on("click",function(){$("#clearall").trigger("click")}),$(".linkToButton").length>0&&$(".linkToButton").on("click",function(){return $btnToClick=$($(this).attr("data-button-to-click")),$btnToClick.trigger("click"),!1}),$(".emtip").length>0&&($(".emtip").each(function(){$(this).hasClass("error")&&$(this).parents("div.questionhelp").removeClass("text-info").addClass("text-danger")}),$(".emtip").each(function(){$(this).on("classChangeError",function(){$parent=$(this).parent("div.questionhelp"),$parent.removeClass("text-info",1),$parent.addClass("text-danger",1),$parent.hasClass("hide-tip")&&($parent.removeClass("hide-tip",1),$parent.addClass("tip-was-hidden",1)),$questionContainer=$(this).parents("div.question-container"),$questionContainer.addClass("input-error")}),$(this).on("classChangeGood",function(){$parent=$(this).parents("div.questionhelp"),$parent.removeClass("text-danger"),$parent.addClass("text-info"),$parent.hasClass("tip-was-hidden")&&$parent.removeClass("tip-was-hidden").addClass("hide-tip"),$questionContainer=$(this).parents("div.question-container"),$questionContainer.removeClass("input-error")})})),$(".hidemenubutton").length>0&&$(".navbar-right").hide(),$("#surveyListFooter").length>0&&($surveyListFooter=$("#surveyListFooter"),$("#outerframeContainer").after($surveyListFooter)),$(function(){$('[data-toggle="tooltip"]').tooltip()})}),window.alert=function(t,e){0==$("#bootstrap-alert-box-modal").length&&$("body").append('<div id="bootstrap-alert-box-modal" class="modal fade">            <div class="modal-dialog">                <div class="modal-content">                    <div class="modal-header" style="min-height:40px;">                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>                        <h4 class="modal-title"></h4>                    </div>                    <div class="modal-body"><p></p></div>                    <div class="modal-footer">                        <a href="#" data-dismiss="modal" class="btn btn-default">Close</a>                    </div>                </div>            </div>        </div>'),$("#bootstrap-alert-box-modal .modal-header h4").text(e||""),$("#bootstrap-alert-box-modal .modal-body p").text(t||""),$(document).ready(function(){$("#bootstrap-alert-box-modal").modal("show")})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
